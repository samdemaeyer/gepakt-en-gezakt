{"version":3,"sources":["components/NavBar.js","sections/Section1.js","sections/Section2.js","sections/Section3.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","arguments","scrollToAnchor","e","id","preventDefault","document","getElementById","scrollIntoView","inline","setState","isOpen","state","className","this","src","alt","href","onClick","type","React","Component","Section1","Section2","Section3","App","sections","key","firstSection","props","window","addEventListener","pageYOffset","clientHeight","firstSectionFromArray","shift","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5d51bf8f.chunk.js","sourcesContent":["import React from 'react';\nimport './NavBar.scss';\n\nclass NavBar extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = { isOpen: false };\n  }\n\n  scrollToAnchor = (e, id) => {\n    e.preventDefault();\n    document.getElementById(id).scrollIntoView({ inline: 'nearest' });\n    this.setState({ isOpen: false });\n  };\n\n  render() {\n    return (\n      <nav className={`main-nav ${this.state.isOpen ? 'is-open' : ''}`} id=\"nav-bar\">\n        <img src=\"/gepakt-en-gezakt/logo.png\" alt=\"main-logo\" className=\"main-logo\" />\n        <ul className=\"nav-items\">\n          <li>\n            <a href=\"#section-1\" onClick={(e) => this.scrollToAnchor(e, 'scroll-section-1')} className=\"nav-item\">\n              De situatie\n            </a>\n          </li>\n          <li>\n            <a href=\"#section-2\" onClick={(e) => this.scrollToAnchor(e, 'section-2')} className=\"nav-item\">\n              Gepakt en Gezakt\n            </a>\n          </li>\n          <li>\n            <a href=\"#section-3\" onClick={(e) => this.scrollToAnchor(e, 'section-3')} className=\"nav-item\">\n              'T proces\n            </a>\n          </li>\n          <li>\n            <a href=\"#section-4\" onClick={(e) => this.scrollToAnchor(e, 'section-4')} className=\"nav-item\">\n              Aanbod\n            </a>\n          </li>\n          <li>\n            <a href=\"#section-5\" onClick={(e) => this.scrollToAnchor(e, 'section-5')} className=\"nav-item\">\n              Contact\n            </a>\n          </li>\n        </ul>\n        <button type=\"button\" className=\"menu-toggle\" onClick={(e) => this.setState({ isOpen: !this.state.isOpen })}>\n          <i className=\"fa fa-bars\"></i>\n        </button>\n      </nav>\n    );\n  }\n}\n\nexport default NavBar;\n","import React from 'react';\nimport './Section1.scss';\n\nexport default function Section1({ id }) {\n  return (\n    <div id={id}>\n      <section className=\"container p-5\" id=\"scroll-section-1\">\n        <div className=\"thumbs-wrapper\">\n          <img className=\"thumb\" src=\"/gepakt-en-gezakt/section-1/tents-1.jpg\" alt=\"tents-1\" />\n          <img className=\"thumb\" src=\"/gepakt-en-gezakt/section-1/tents-2.jpg\" alt=\"tents-2\" />\n          <img className=\"thumb\" src=\"/gepakt-en-gezakt/section-1/tents-3.jpg\" alt=\"tents-3\" />\n        </div>\n        <img src=\"/gepakt-en-gezakt/section-1/tents-big.jpg\" alt=\"tents big\" />\n        <h2 className=\"title pt-1 mb-0\">\n          Draag jij volgend jaar\n          <br />\n          een achtergelaten tentje?\n        </h2>\n      </section>\n      <div className=\"bg-darker\">\n        <section className=\"container\">\n          <article className=\"p-5 d-flex\">\n            <p className=\"content\">\n              In de ideale wereld zou de oplossing natuurlijk zijn dat er geen zwerfvuil meer wordt achter- gelaten op\n              festivaltereinen en dat iedereen zijn afval achterlaat in de voorziene vuilbakken en zijn\n              kampeermaterialen het jaar erop opnieuw zou gebruiken.\n            </p>\n            <p className=\"content\">\n              Maar wat met de achtergelaten tenten of als deze stuk gegaan zijn. Wij gingen hiervoor op zoek naar een\n              alternatief en gingen deze recy- cleren. Recycleren is niet de grote oplossing. Het is enkel een brug naar\n              afvalvermindering. We sloegen de handen in elkaar met Flagbag.\n            </p>\n          </article>\n        </section>\n        <section className=\"py-5 d-flex container\">\n          <div className=\"content-left\">\n            <h2 className=\"p-5 title text-center\">1 op 4 laat hun tent achter op festivalweides</h2>\n            <article className=\"p-3 mt-3 bg-light\">\n              <p>\n                Wij zijn Gepakt en Gezakt en voeren een sensibilise- ringscampagne rond plastic, meerbepaald het\n                plasticafval op festivals. Via deze campagne proberen we festivalgan- gers aan te sporen om zelf deel uit\n                te maken van één van de zovele oplossingen van sluikstort op de festivalterreinen en op de manier kan elk\n                zijn eigen steentje bijdragen.\n              </p>\n              <p className=\"mb-0\">\n                Zelf zijn wij, Carla-Reina Cochez en Dorina Verdyck, twee master studenten aan Sint Lucas Antwerpen in de\n                richting beeldende kunsten in socio-politieke context en medeo- prichters van het collectief Trashwerp. En\n                willen jullie graag betrekken in onze zoektocht naar een betere toekomst.\n              </p>\n            </article>\n          </div>\n          <div className=\"img-wrapper\">\n            <img src=\"/gepakt-en-gezakt/section-1/girl-holding-bag.png\" alt=\"Girl olding a bag\" />\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './Section2.scss';\n\nexport default function Section2({ id }) {\n  return (\n    <div id={id}>\n      <section id=\"scroll-section-2\" className=\"p-2 pt-5 mt-2\">\n        <h2 className=\"title pb-1\">Ik word geire gedragen.</h2>\n        <div className=\"thumbs-wrapper d-flex\">\n          <img className=\"thumb\" src=\"/gepakt-en-gezakt/section-1/bag.jpg\" alt=\"bag\" />\n          <img className=\"thumb\" src=\"/gepakt-en-gezakt/section-1/girl-holding-bag-1.jpg\" alt=\"girl holding bag\" />\n          <img className=\"thumb\" src=\"/gepakt-en-gezakt/section-1/girl-waring-bag.jpg\" alt=\"girl waring bag\" />\n          <img className=\"thumb\" src=\"/gepakt-en-gezakt/section-1/girl-holding-bag-2.jpg\" alt=\"girl holding bag\" />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import React from 'react';\nimport './Section3.scss';\n\nexport default function Section3({ id }) {\n  return (\n    <div id={id}>\n      <section id=\"scroll-section-3\" className=\"bg-darker section\">\n        <div className=\"container d-flex\">\n          <h2 className=\"title p-1 text-center\">Gepakt en gezakt</h2>\n          <article className=\"py-5 px-3 bg-light content-right d-flex\">\n            <p className=\"mr-2\">\n              Onze campagne, gepakt en gezakt bestaat uit het doel om een duurzaam state- ment te kunnen maken. Zo hebben\n              we in deze campag- ne verschillende handige en milieuvriendelijke producten gemaakt. Deze campagne, ‘Gepakt\n              en Gezakt’, bestaat uit verschillende onderdelen, met telkens als basis het oog om een duurzaam statement te\n              kunnen maken. Zo kozen we ook voor een crowdfun- dingcampagne op te starten, waardoor we op voorhand weten\n              hoeveel stuks we hier- van moeten laten produceren door Flagbag.\n            </p>\n            <p>\n              Flagbag is een sociale twerk- stellingsorganisatie in Hasselt waar we na een bedrijfsbe- zoek volledig\n              overtuigd waren van hun werkwijze en visie, welke in dezelfde lijn ligt als de onze.Flagbag doet aan\n              ‘upcycling’ ‘cradle-to-crad- le‘ van afgedankte zeilen en vlaggen en maakt hiervan nieuwe producten. Doordat\n              deze onderdelen gerecycled worden, wordt er ook telkens een uniek stuk geprodu- ceerd‘ een limited edition.\n            </p>\n          </article>\n        </div>\n      </section>\n      <section className=\"container\">\n        <h2 className=\"py-5 title text-center\">Chance, dat ge mij kunt wassen op 30 °C</h2>\n        <article>\n          <div className=\"bg-darker center-block\">\n            <h2 className=\"title-left\">Waarom eigenlijk?</h2>\n            <p className=\"content\">\n              Deels uit eigen ervaringen en ’struggles’ die we zelf hebben ervaren in onze zoektocht en tijdens\n              gesprekken, waar- bij we heel vaak merken dat er veel mensen proberen hun steentje bij te dragen, maar niet\n              weten waar te beginnen.\n            </p>\n            <p className=\"content\">\n              We krijgen hieromtrent veel vragen en beseffen dat er nood is aan verduidelijking. Hierbij willen we ons\n              uiterste best doen om mensen hierin te begeleiden.\n            </p>\n            <img className=\"img-right\" src=\"/gepakt-en-gezakt/section-1/girl-holding-bag-1.jpg\" alt=\"girl holding bag\" />\n          </div>\n        </article>\n      </section>\n    </div>\n  );\n}\n","import React from 'react';\nimport NavBar from './components/NavBar';\nimport Section1 from './sections/Section1';\nimport Section2 from './sections/Section2';\nimport Section3 from './sections/Section3';\n\n\nclass App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      sections: [\n        <Section1 key={0} id=\"section-1\" />,\n        <Section2 key={1} id=\"section-2\" />,\n        <Section3 key={2} id=\"section-3\" />,\n      ]\n    }\n  }\n\n  componentDidMount() {\n    let firstSection = document.getElementById(this.state.sections[0].props.id);\n\n    window.addEventListener('scroll', () => {\n      if (window.pageYOffset > firstSection.clientHeight) {\n        const firstSectionFromArray = this.state.sections.shift();\n        this.setState({ sections: [...this.state.sections, firstSectionFromArray] });\n        firstSection = document.getElementById(this.state.sections[0].props.id);\n      }\n    });\n  }\n  render() {\n    return (\n      <>\n        <NavBar />\n        {this.state.sections}\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}